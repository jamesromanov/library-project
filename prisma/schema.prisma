// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// ADMIN model
model Admin {
  id String @id @default(uuid())
  name  String?
  email String @unique
  password String
  refreshToken String? @unique
  role Role
  createdAt DateTime @default(now())
}
// User 
model User {
  id String @id @default(uuid())
  name  String?
  email String @unique
  password String
  refreshToken String? @unique
  role Role
  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes Like[]
}
// BOOK model
model Book {
  id String @id @default(uuid())
  title String 
  author String
  image String
  publishedYear Int
  price Int
  description String?
  format String @default("pdf")
  file String 
  pages Int
  language Languages
  category BookCatigories
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active Boolean @default(true)
  likes Like[]

  @@index([title, price, pages, language, createdAt])
}
// APPLICAION 
model Application {
  id String @id @default(ulid())
  name String 
  phone String
  question String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active Boolean @default(true)


  @@index([createdAt])
}
// NEW model
model New {
  id String @id @default(ulid())
  title String 
  thumbnail String
  images String[]
  context String
  publication_date String
  source String
  language Languages
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active Boolean @default(true)

  @@index([updatedAt, language, createdAt])
}

model Like {
  id String @id @default(ulid())
  user User @relation(fields: [userId], references: [id])
  userId String
  book Book @relation(fields: [bookId], references: [id])
  bookId  String
   createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// USER role 
enum Role {
  ADMIN
  USER
}
// BOOK | NEWS languages 
enum Languages {
  RU 
  EN 
  UZ 
}

//Book catigory 
enum BookCatigories {
  Badiiy_Adabiyotlar
  Rus_Adabiyotlar
  Ozbek_Adabiyotlar
  Prezident_Asarlari
  Hikoyalar
}
